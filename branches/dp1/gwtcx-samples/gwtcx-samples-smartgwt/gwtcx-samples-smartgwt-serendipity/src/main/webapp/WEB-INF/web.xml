<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * (C) Copyright 2010, 2011 upTick Pty Ltd
 *
 * Licensed under the terms of the GNU Lesser General Public License version 3
 * as published by the Free Software Foundation. You may obtain a copy of the
 * License at: http://www.gnu.org/copyleft/lesser.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
-->

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
  version="3.0">

  <context-param>
    <param-name>PU-NAME</param-name>
    <param-value>HSQLDB-HOSTED-MODE-PU</param-value>
    <!-- <param-value>HSQLDB-TOMCAT7-CP-PU</param-value> -->
    <description>The name of the Persistence Unit used by the application.</description>
  </context-param>
  <context-param>
    <param-name>DS-NAME</param-name>
    <param-value>jdbc/HSQLDB-TOMCAT7-CP</param-value>
    <description>The name of the Data Source used by the application.</description>
  </context-param>
  <context-param>
    <param-name>MAIL-NAME</param-name>
    <param-value>mail/GmailSmtpServer</param-value>
    <description>The name of the mail Session used by sample application.</description>
  </context-param>

  <!-- Place GuiceFilter at the top of your web.xml file -->
  <filter>
    <filter-name>guiceFilter</filter-name>
    <filter-class>com.google.inject.servlet.GuiceFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>guiceFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--
    This Guice listener hijacks all further filters and servlets.
    Extra filters and servlets have to be configured in your
    ServletModule#configureServlets() by calling
    serve(String).with(Class<? extends HttpServlet>) and
    filter(String).through(Class<? extends Filter)
  -->
  <listener>
    <listener-class>com.gwtcx.sample.serendipity.server.guice.SerendipityGuiceServletContextListener</listener-class>
  </listener>

  <resource-ref>
    <description>The database DataSource for the sample application.</description>
    <res-ref-name>jdbc/HSQLDB-TOMCAT7-CP</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>

  <resource-ref>
    <description>The name of the mail Session used by the sample application.</description>
    <res-ref-name>mail/GmailSmtpServer</res-ref-name>
    <res-type>javax.mail.Session</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>

  <!--
  <resource-ref>
    <description>The database DataSource for the sample application.</description>
    <res-ref-name>jdbc/HSQLDB-DB-CP</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
  -->

  <!--
  <resource-ref>
    <description>The database DataSource for the sample application.</description>
    <res-ref-name>jdbc/HSQLDB-BONE-CP</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
  -->

  <!--
  <resource-ref>
    <description>The database DataSource for the sample application.</description>
    <res-ref-name>jdbc/HSQLDB-C3P0-CP</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
  -->

  <!-- Default page to serve -->
  <welcome-file-list>
    <welcome-file>Serendipity.html</welcome-file>
  </welcome-file-list>

</web-app>


